# Generated by Django 3.1.3 on 2020-11-08 12:04

import ckeditor_uploader.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='文章标题')),
                ('abstract', models.CharField(max_length=256, verbose_name='文章摘要')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('publish_status', models.BooleanField(choices=[(False, '未发布'), (True, '发布')], default=False, verbose_name='发布状态')),
                ('point', models.IntegerField(default=0, verbose_name='积分')),
                ('duration', models.DurationField(default=datetime.timedelta(0), verbose_name='推荐阅读时间')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='文章内容')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='板块标题')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='系列的名称')),
                ('articles', models.ManyToManyField(to='app01.Article', verbose_name='文章')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('position', models.CharField(max_length=32, verbose_name='职位')),
                ('company', models.CharField(choices=[('0', '北京总公司'), ('1', '石家庄分公司'), ('2', '广州分公司')], max_length=32, verbose_name='公司')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('last_time', models.DateTimeField(blank=True, null=True, verbose_name='最后一次登录时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='用户创建时间')),
                ('is_active', models.BooleanField(default=True)),
                ('avatar', models.ImageField(default='img/avatar/back.jpg', upload_to='img/avatar', verbose_name='用户头像')),
            ],
        ),
        migrations.CreateModel(
            name='UserSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('progress', models.CharField(default='0.00', max_length=32)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.series', verbose_name='系列')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.user', verbose_name='用户')),
            ],
        ),
        migrations.AddField(
            model_name='series',
            name='users',
            field=models.ManyToManyField(through='app01.UserSeries', to='app01.User', verbose_name='用户'),
        ),
        migrations.CreateModel(
            name='PointDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(default=0, verbose_name='积分')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='完成时间')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.article', verbose_name='文章')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.user', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('status', models.BooleanField(default=True, verbose_name='审核状态')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.article', verbose_name='文章')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.user', verbose_name='评论者')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app01.user', verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app01.category', verbose_name='板块'),
        ),
        migrations.AddField(
            model_name='article',
            name='detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='app01.articledetail'),
        ),
    ]
